import logging
import re
import aiohttp
from typing import Dict, List, Any, Optional

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import (
    ContextTypes, CommandHandler, MessageHandler, CallbackQueryHandler,
    ConversationHandler, filters, Application
)

from handlers.utils import process_team_roles
from constants import *

logger = logging.getLogger(__name__)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
def get_profile_inline_keyboard():
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    keyboard = [
        [InlineKeyboardButton("üë• –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã", callback_data="profile_teams")],
        [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="profile_create_team")],
        [InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", callback_data="profile_check_status")],
        [InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="profile_main_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_back_to_profile_inline_button():
    """Inline –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç."""
    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile_back")]]
    return InlineKeyboardMarkup(keyboard)

# –û–±—ã—á–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞)
def get_back_to_profile_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç."""
    keyboard = [
        [KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_profile_keyboard():
    """–û–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    keyboard = [
        [KeyboardButton("üë• –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã")],
        [KeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É")],
        [KeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")],
        [KeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
async def profile_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    user = update.effective_user
    
    message_text = (
        f"üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n"
        f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    )
    
    # –ï—Å–ª–∏ —ç—Ç–æ callback_query, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        await query.edit_message_text(
            text=message_text,
            reply_markup=get_profile_inline_keyboard(),
            parse_mode="HTML"
        )
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        await update.message.reply_text(
            text=message_text,
            reply_markup=get_profile_inline_keyboard(),
            parse_mode="HTML"
        )
    
    return PROFILE_MENU

async def back_to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    query = update.callback_query
    await query.answer()
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    from main import get_main_keyboard  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–æ—Ñ–∏–ª—è
    await query.message.delete()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await query.message.reply_text(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_keyboard()
    )
    
    return ConversationHandler.END

async def show_my_teams(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    query = update.callback_query
    await query.answer()
    
    db = context.bot_data["db"]
    user_id = query.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    teams = db.get_user_teams(user_id)
    
    if not teams:
        await query.edit_message_text(
            "üîç –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\".",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥
    message = "üë• <b>–í–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
    
    for idx, team in enumerate(teams, 1):
        status_emoji = "üìù" if team["status"] == "draft" else "‚è≥" if team["status"] == "pending" else "‚úÖ" if team["status"] == "approved" else "‚ùå"
        message += f"{idx}. {status_emoji} <b>{team['team_name']}</b>\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
        player_count = len(team["players"])
        message += f"   –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {player_count}\n"
        message += f"   –°—Ç–∞—Ç—É—Å: {TEAM_STATUS.get(team['status'], '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
    keyboard = []
    for team in teams:
        keyboard.append([
            InlineKeyboardButton(f"{team['team_name']} ({len(team['players'])} –∏–≥—Ä–æ–∫–æ–≤)", callback_data=f"view_team_{team['id']}")
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="profile_back")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        message + "\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )
    return PROFILE_MENU

async def view_team(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ."""
    query = update.callback_query
    await query.answer()
    
    db = context.bot_data["db"]
    user_id = query.from_user.id
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã –∏–∑ callback_data
    team_id = int(query.data.split("_")[2])
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
    team = db.get_team_by_id(team_id)
    
    if not team:
        await query.edit_message_text(
            "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")
            ]])
        )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º/–∫–∞–ø–∏—Ç–∞–Ω–æ–º –∫–æ–º–∞–Ω–¥—ã
    is_member = any(p.get("telegram_id") == user_id for p in team["players"])
    is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == user_id for p in team["players"])
    
    if not is_member:
        await query.edit_message_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")
            ]])
        )
        return PROFILE_MENU
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
    message = await format_team_info(team, is_captain=is_captain)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_team_id"] = team_id
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
    player_buttons = []
    for player in team["players"]:
        player_buttons.append(
            InlineKeyboardButton(
                f"{player['nickname']} (@{player['telegram_username']})",
                callback_data=f"player_{player['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    for button in player_buttons:
        keyboard.append([button])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
    if is_captain:
        action_buttons = []
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è (–¥–ª—è –ª—é–±—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤)
        action_buttons.append(
            InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")
        )
        
        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ (–¥–ª—è –ª—é–±—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤)
        action_buttons.append(
            InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")
        )
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
        if team["status"] == "draft":
            action_buttons.append(
                InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")
            )
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        action_buttons.append(
            InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        for button in action_buttons:
            keyboard.append([button])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
    
    await query.edit_message_text(
        message,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    
    return PROFILE_MENU

async def format_team_info(team, is_captain=False) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    
    Args:
        team: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–æ–º–∞–Ω–¥–µ
        is_captain: True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∫–∞–ø–∏—Ç–∞–Ω–æ–º
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ HTML
    """
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    status_text = TEAM_STATUS.get(team["status"], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    
    # –ù–∞—Ö–æ–¥–∏–º –∫–∞–ø–∏—Ç–∞–Ω–∞
    captain = None
    for player in team["players"]:
        if player.get("is_captain", False):
            captain = player
            break
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤, –Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–ø–∏—Ç–∞–Ω–∞
    all_players = []
    if captain:
        all_players.append(captain)  # –ö–∞–ø–∏—Ç–∞–Ω –ø–µ—Ä–≤—ã–º
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    for player in team["players"]:
        if not player.get("is_captain", False):
            all_players.append(player)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    players_list = ""
    for idx, player in enumerate(all_players, 1):
        player_username = f"(@{player['telegram_username']})" if player.get('telegram_username') else ""
        discord_info = f" Discord: {player.get('discord_username', '–ù–µ —É–∫–∞–∑–∞–Ω')}" if player.get('discord_username') else ""
        players_list += f"{idx}. {player['nickname']} {player_username}{discord_info}\n"
    
    # –ë–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        "üéÆ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ:</b>\n\n"
        f"üè∑Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team['team_name']}\n"
        f"üìÖ <b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</b> {team['registration_date']}\n"
        f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É—Ä–Ω–∏—Ä–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if team.get("tournament_id") and team.get("tournament_name"):
        message += f"üèÜ <b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä:</b> {team['tournament_name']}\n"
        if team.get("tournament_date"):
            message += f"üìÜ <b>–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞:</b> {team['tournament_date']}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–ø–∏—Ç–∞–Ω–∞, –µ—Å–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã
    if team.get("captain_contact"):
        message += f"üì± <b>–ö–æ–Ω—Ç–∞–∫—Ç –∫–∞–ø–∏—Ç–∞–Ω–∞:</b> {team['captain_contact']}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ø–∏—Ç–∞–Ω–µ
    if captain:
        message += f"üë®‚Äç‚úàÔ∏è <b>–ö–∞–ø–∏—Ç–∞–Ω:</b> {captain['nickname']} (@{captain['telegram_username']})\n"
        if captain.get('discord_username'):
            message += f"üéÆ <b>Discord –∫–∞–ø–∏—Ç–∞–Ω–∞:</b> {captain['discord_username']}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if team.get("admin_comment"):
        message += f"\nüí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n{team['admin_comment']}\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    message += f"<b>–ò–≥—Ä–æ–∫–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n{players_list}"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
    if is_captain:
        if team["status"] == "draft":
            message += (
                "\nüìù <b>–ö–æ–º–∞–Ω–¥–∞ –≤ —Å—Ç–∞–¥–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞).</b>\n"
                f"–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º {MIN_PLAYERS + 1} –∏–≥—Ä–æ–∫–æ–≤ (–≤–∫–ª—é—á–∞—è –∫–∞–ø–∏—Ç–∞–Ω–∞).\n"
                f"–ú–∞–∫—Å–∏–º—É–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ {MAX_PLAYERS + 1} –∏–≥—Ä–æ–∫–æ–≤ (–≤–∫–ª—é—á–∞—è –∫–∞–ø–∏—Ç–∞–Ω–∞).\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞\"."
            )
        elif team["status"] == "pending":
            message += (
                "\n‚è≥ <b>–ó–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ –ø–æ–¥–∞–Ω–∞.</b>\n"
                "–û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ç—É—Ä–Ω–∏—Ä–∞."
            )
        elif team["status"] == "approved":
            message += (
                "\n‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ!</b>\n"
                "–û–∂–∏–¥–∞–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤."
            )
        elif team["status"] == "rejected":
            message += (
                "\n‚ùå <b>–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.</b>\n"
                "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
            )
    
    return message

async def start_create_team(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã."""
    query = update.callback_query
    await query.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    user_id = query.from_user.id
    db = context.bot_data["db"]
    user_teams = db.get_user_teams(user_id)
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã, –±–ª–æ–∫–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π
    if user_teams:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        teams_list = ""
        for idx, team in enumerate(user_teams, 1):
            teams_list += f"{idx}. {team['team_name']} (–°—Ç–∞—Ç—É—Å: {TEAM_STATUS.get(team['status'], '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = []
        for team in user_teams:
            keyboard.append([
                InlineKeyboardButton(f"{team['team_name']}", callback_data=f"view_team_{team['id']}")
            ])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile_back")])
        
        await query.message.reply_text(
            "‚ö†Ô∏è <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É "
            "–∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –µ—ë, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é.\n\n"
            f"<b>–í–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n{teams_list}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        return PROFILE_MENU
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–∞–Ω–¥, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
    await query.message.reply_text(
        "üéÆ <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.\n\n"
        "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –Ω–∞–∑–≤–∞–Ω–∏—é:\n"
        "- –û—Ç 3 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤\n"
        "- –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —Ç–æ—á–∫–∏",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    return TEAM_CREATE_NAME

async def process_team_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã."""
    team_name = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è
    if len(team_name) < 2 or len(team_name) > 30:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_NAME
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    if not re.match(r'^[a-zA-Z–∞-—è–ê-–Ø0-9\s\-_\.]+$', team_name):
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã. "
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —Ç–æ—á–∫–∏.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_NAME
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    db = context.bot_data["db"]
    if db.team_name_exists(team_name):
        await update.message.reply_text(
            "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_NAME
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    context.user_data["new_team_name"] = team_name
    
    await update.message.reply_text(
        f"üéÆ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: <b>{team_name}</b>\n\n"
        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º. "
        "–í—ã –±—É–¥–µ—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∫–∞–ø–∏—Ç–∞–Ω–æ–º –∫–æ–º–∞–Ω–¥—ã.\n\n"
        "‚úçüèº –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    return TEAM_CREATE_CAPTAIN

async def process_captain_nickname(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–∏–∫–Ω–µ–π–º–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞."""
    captain_nickname = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞
    if len(captain_nickname) < 2 or len(captain_nickname) > 20:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_CAPTAIN
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –≤ PUBG
    nickname_exists, correct_nickname = await check_pubg_nickname(captain_nickname)
    
    if not nickname_exists:
        await update.message.reply_text(
            f"‚ùå –ò–≥—Ä–æ–∫ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º \"{captain_nickname}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PUBG.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_CAPTAIN
    
    # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–º, –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if captain_nickname != correct_nickname:
        await update.message.reply_text(
            f"‚ÑπÔ∏è –ù–∏–∫–Ω–µ–π–º —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞: \"{correct_nickname}\" (–±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ: \"{captain_nickname}\")."
        )
        captain_nickname = correct_nickname
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫–Ω–µ–π–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["captain_nickname"] = captain_nickname
    
    # –ó–∞–ø—Ä–æ—Å Discord username
    await update.message.reply_text(
        f"‚úÖ –ù–∏–∫–Ω–µ–π–º –ø—Ä–∏–Ω—è—Ç: <b>{captain_nickname}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Discord username (–±–µ–∑ #1234).\n"
        f"–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    return TEAM_CREATE_CAPTAIN_DISCORD

async def process_captain_discord(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ Discord username –∫–∞–ø–∏—Ç–∞–Ω–∞."""
    discord_username = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É Discord username
    if len(discord_username) < 2 or len(discord_username) > 32:
        await update.message.reply_text(
            "‚ö†Ô∏è Discord username –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_CAPTAIN_DISCORD
    
    # –ü–æ–ª—É—á–∞–µ–º Discord ID –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    discord_bot = context.bot_data.get("discord_bot")
    discord_id = await get_discord_id_by_username(discord_username, discord_bot)
    
    if not discord_id:
        await update.message.reply_text(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Discord username \"{discord_username}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω Discord username\n"
            f"‚Ä¢ –í—ã –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞—à–µ–º—É Discord —Å–µ—Ä–≤–µ—Ä—É\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_CAPTAIN_DISCORD
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω—É–∂–Ω–æ–º Discord —Å–µ—Ä–≤–µ—Ä–µ
    is_member = await check_discord_membership(discord_id, discord_bot)
    
    if not is_member:
        await update.message.reply_text(
            f"‚ùå –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –Ω–∞—à–µ–º Discord —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}\n"
            f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_CREATE_CAPTAIN_DISCORD
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = update.message.from_user
    team_name = context.user_data["new_team_name"]
    captain_nickname = context.user_data["captain_nickname"]
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = context.bot_data["db"]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–ø–∏—Ç–∞–Ω–µ –≤–∫–ª—é—á–∞—è Discord
    captain_data = {
        "nickname": captain_nickname, 
        "username": user.username or f"user{user.id}", 
        "telegram_id": user.id,
        "discord_username": discord_username,
        "discord_id": discord_id,
        "is_captain": True
    }
    
    team_id = db.create_team(
        team_name=team_name,
        captain=captain_data
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    context.user_data["current_team_id"] = team_id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
    team = db.get_team_by_id(team_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
    message = await format_team_info(team, is_captain=True)
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")],
        [InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile_back")]
    ]
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        message,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    
    return PROFILE_MENU

async def add_player_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞."""
    # –ú–æ–≥–ª–æ –ø—Ä–∏–π—Ç–∏ –∫–∞–∫ —á–µ—Ä–µ–∑ callback, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        msg = query.message
    else:
        msg = update.message
    
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        if update.callback_query:
            await query.edit_message_text(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=get_profile_inline_keyboard()
            )
        else:
            await msg.reply_text(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=get_profile_inline_keyboard()
            )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    if len(team["players"]) > MAX_PLAYERS:
        if update.callback_query:
            await query.edit_message_text(
                f"‚ö†Ô∏è –í –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ ({MAX_PLAYERS + 1}, –≤–∫–ª—é—á–∞—è –∫–∞–ø–∏—Ç–∞–Ω–∞).",
                reply_markup=get_back_to_profile_inline_button()
            )
        else:
            await msg.reply_text(
                f"‚ö†Ô∏è –í –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ ({MAX_PLAYERS + 1}, –≤–∫–ª—é—á–∞—è –∫–∞–ø–∏—Ç–∞–Ω–∞).",
                reply_markup=get_back_to_profile_keyboard()
            )
        return PROFILE_MENU
    
    # –ï—Å–ª–∏ —ç—Ç–æ callback, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–Ω–∞—á–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Ç–µ–∫—É—â–µ–µ
    if update.callback_query:
        await msg.reply_text(
            "üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ Telegram –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username) –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å.\n"
            "–§–æ—Ä–º–∞—Ç: @username\n\n"
            "–í–∞–∂–Ω–æ: —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω username –≤ Telegram.",
            reply_markup=get_back_to_profile_keyboard(),
            parse_mode="HTML"
        )
    else:
        await msg.reply_text(
            "üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ Telegram –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username) –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å.\n"
            "–§–æ—Ä–º–∞—Ç: @username\n\n"
            "–í–∞–∂–Ω–æ: —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω username –≤ Telegram.",
            reply_markup=get_back_to_profile_keyboard(),
            parse_mode="HTML"
        )
    
    return TEAM_ADD_PLAYER_USERNAME

async def process_player_username(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ Telegram username –∏–≥—Ä–æ–∫–∞."""
    username_input = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–≤–æ–¥ —Ñ–æ—Ä–º–∞—Ç—É @username
    username_match = re.match(USERNAME_PATTERN, username_input)
    if not username_match:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ username –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_USERNAME
    
    username = username_match.group(1)
    team_id = context.user_data.get("current_team_id")
    
    if not team_id:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º username –≤ –∫–æ–º–∞–Ω–¥–µ
    if db.check_username_exists_in_team(team_id, username):
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Telegram username —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π Telegram username:",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_USERNAME
    
    # –ü–æ–ª—É—á–∏–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userbot = context.bot_data.get("userbot")
    if userbot:
        try:
            telegram_id = await get_tg_id_by_username(username, userbot)
            
            if not telegram_id:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π username:",
                    reply_markup=get_back_to_profile_keyboard()
                )
                return TEAM_ADD_PLAYER_USERNAME
                
            context.user_data["new_player_telegram_id"] = telegram_id
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID –¥–ª—è @{username}: {e}")
            
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            await update.message.reply_text(
                f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}.\n"
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username.\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–æ —É—á—Ç–∏—Ç–µ, —á—Ç–æ –µ—Å–ª–∏ username –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, "
                "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
            )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º username –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    context.user_data["new_player_username"] = username
    
    await update.message.reply_text(
        f"Telegram: @{username}\n\n"
        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞.",
        reply_markup=get_back_to_profile_keyboard()
    )
    return TEAM_ADD_PLAYER_NICKNAME

async def process_player_nickname(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –∏–≥—Ä–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞."""
    nickname = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞
    if len(nickname) < 2 or len(nickname) > 20:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_NICKNAME
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –≤ PUBG
    nickname_exists, correct_nickname = await check_pubg_nickname(nickname)
    
    if not nickname_exists:
        await update.message.reply_text(
            f"‚ùå –ò–≥—Ä–æ–∫ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º \"{nickname}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PUBG.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_NICKNAME
    
    # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–º, –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if nickname != correct_nickname:
        await update.message.reply_text(
            f"‚ÑπÔ∏è –ù–∏–∫–Ω–µ–π–º —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞: \"{correct_nickname}\" (–±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ: \"{nickname}\")."
        )
        nickname = correct_nickname
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫–Ω–µ–π–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["new_player_nickname"] = nickname
    
    # –ó–∞–ø—Ä–æ—Å Discord username
    await update.message.reply_text(
        f"‚úÖ –ù–∏–∫–Ω–µ–π–º –ø—Ä–∏–Ω—è—Ç: <b>{nickname}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ Discord username –∏–≥—Ä–æ–∫–∞ (–±–µ–∑ #1234).\n"
        f"–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    return TEAM_ADD_PLAYER_DISCORD

async def process_player_discord(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ Discord username –∏–≥—Ä–æ–∫–∞."""
    discord_username = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É Discord username
    if len(discord_username) < 2 or len(discord_username) > 32:
        await update.message.reply_text(
            "‚ö†Ô∏è Discord username –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_DISCORD
    
    # –ü–æ–ª—É—á–∞–µ–º Discord ID –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    discord_bot = context.bot_data.get("discord_bot")
    discord_id = await get_discord_id_by_username(discord_username, discord_bot)
    
    if not discord_id:
        await update.message.reply_text(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Discord username \"{discord_username}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω Discord username\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –Ω–∞—à–µ–º—É Discord —Å–µ—Ä–≤–µ—Ä—É\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_DISCORD
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω—É–∂–Ω–æ–º Discord —Å–µ—Ä–≤–µ—Ä–µ
    is_member = await check_discord_membership(discord_id, discord_bot)
    
    if not is_member:
        await update.message.reply_text(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –Ω–∞—à–µ–º Discord —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}\n"
            f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_DISCORD
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–≥—Ä–æ–∫–µ –∏ –∫–æ–º–∞–Ω–¥–µ
    username = context.user_data.get("new_player_username")
    telegram_id = context.user_data.get("new_player_telegram_id")
    team_id = context.user_data.get("current_team_id")
    nickname = context.user_data.get("new_player_nickname")
    
    if not team_id or not username or not nickname:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º –≤ –∫–æ–º–∞–Ω–¥–µ
    if db.check_nickname_exists_in_team(team_id, nickname):
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º:",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_NICKNAME
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Discord username –≤ –∫–æ–º–∞–Ω–¥–µ
    if db.check_discord_exists_in_team(team_id, discord_username):
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Discord username —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.\n"
            "–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Discord –∞–∫–∫–∞—É–Ω—Ç.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π Discord username:",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_DISCORD
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –∏–≥—Ä–æ–∫–µ
    player_data = {
        "nickname": nickname,
        "username": username,
        "telegram_id": telegram_id,
        "discord_username": discord_username,
        "discord_id": discord_id,
        "is_captain": False
    }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        was_pending_approved_or_rejected = team_before["status"] in ["pending", "approved", "rejected"]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É
        db.add_player_to_team(team_id, player_data)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = [
            [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile_back")]
        ]
        
        # –ï—Å–ª–∏ —ç—Ç–æ —á–µ—Ä–Ω–æ–≤–∏–∫, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if team["status"] == "draft":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            if len(team["players"]) >= 4:  # –ú–∏–Ω–∏–º—É–º 4 –∏–≥—Ä–æ–∫–∞ (3 + –∫–∞–ø–∏—Ç–∞–Ω)
                keyboard.insert(1, [InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await update.message.reply_text(
            f"{status_message}‚úÖ –ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–º –∏–≥—Ä–æ–∫–µ
        if "new_player_username" in context.user_data:
            del context.user_data["new_player_username"]
        if "new_player_telegram_id" in context.user_data:
            del context.user_data["new_player_telegram_id"]
        if "new_player_nickname" in context.user_data:
            del context.user_data["new_player_nickname"]
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: {e}")
        
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: {str(e)}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_ADD_PLAYER_USERNAME

async def register_team_for_tournament(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä."""
    query = update.callback_query
    await query.answer()
    
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        await query.edit_message_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—É—Ä–Ω–∏—Ä—ã —Å –æ—Ç–∫—Ä—ã—Ç–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
    active_tournaments = db.get_active_tournaments()
    
    if not active_tournaments:
        await query.edit_message_text(
            "‚ö†Ô∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ
    team = db.get_team_by_id(team_id)
    if len(team["players"]) < 4:  # –ú–∏–Ω–∏–º—É–º 4 –∏–≥—Ä–æ–∫–∞ (3 + –∫–∞–ø–∏—Ç–∞–Ω)
        await query.edit_message_text(
            f"‚ö†Ô∏è –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 4 –∏–≥—Ä–æ–∫–∞ (–≤–∫–ª—é—á–∞—è –∫–∞–ø–∏—Ç–∞–Ω–∞).\n\n"
            f"–í –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ —Å–µ–π—á–∞—Å {len(team['players'])} –∏–≥—Ä–æ–∫(–æ–≤).\n\n"
            f"–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏–≥—Ä–æ–∫–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Discord —É –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    players_without_discord = [p for p in team["players"] if not p.get("discord_username")]
    
    if players_without_discord:
        players_list = "\n".join([f"- {p['nickname']} (@{p['telegram_username']})" for p in players_without_discord])
        
        await query.edit_message_text(
            f"‚ö†Ô∏è –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π Discord username.\n\n"
            f"–°–ª–µ–¥—É—é—â–∏–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –∏–º–µ—é—Ç Discord:\n{players_list}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–∞—Ö, –¥–æ–±–∞–≤–∏–≤ –∏—Ö Discord.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—É—Ä–Ω–∏—Ä–∞–º–∏
    keyboard = []
    for tournament in active_tournaments:
        keyboard.append([
            InlineKeyboardButton(
                f"{tournament['name']} ({tournament['event_date']})",
                callback_data=f"register_for_tournament_{team_id}_{tournament['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
    keyboard.append([
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"view_team_{team_id}")
    ])
    
    await query.edit_message_text(
        "üèÜ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç—É—Ä–Ω–∏—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã:\n",
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    
    return PROFILE_MENU

async def confirm_tournament_registration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã –∏ —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ callback_data
    data_parts = query.data.split("_")
    team_id = int(data_parts[3])
    tournament_id = int(data_parts[4])
    
    db = context.bot_data["db"]
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ —Ç—É—Ä–Ω–∏—Ä–µ
    team = db.get_team_by_id(team_id)
    tournament = db.get_tournament_by_id(tournament_id)
    
    if not team or not tournament:
        await query.edit_message_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ —Ç—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    if not tournament["registration_open"]:
        await query.edit_message_text(
            f"‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä \"{tournament['name']}\" –∑–∞–∫—Ä—ã—Ç–∞.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await query.edit_message_text(
        f"üèÜ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä</b>\n\n"
        f"–ö–æ–º–∞–Ω–¥–∞: <b>{team['team_name']}</b>\n"
        f"–¢—É—Ä–Ω–∏—Ä: <b>{tournament['name']}</b>\n"
        f"–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: {tournament['event_date']}\n\n"
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —ç—Ç–æ—Ç —Ç—É—Ä–Ω–∏—Ä?",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("‚úÖ –î–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"confirm_register_{team_id}_{tournament_id}"),
                InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data=f"view_team_{team_id}")
            ]
        ])
    )
    
    return PROFILE_MENU

async def complete_tournament_registration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã –∏ —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ callback_data
    data_parts = query.data.split("_")
    team_id = int(data_parts[2])
    tournament_id = int(data_parts[3])
    
    db = context.bot_data["db"]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∫–∞–Ω–∞–ª
        userbot = context.bot_data.get("userbot")
        
        # –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
        unsubscribed_players = []
        
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID} –¥–ª—è –∫–æ–º–∞–Ω–¥—ã {team['team_name']}")
        
        for player in team["players"]:
            logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–∞ {player['nickname']} (@{player.get('telegram_username', '–Ω–µ—Ç')}) —Å ID {player.get('telegram_id', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å telegram_id
            if player.get("telegram_id"):
                is_subscribed = await check_channel_subscription(userbot, player["telegram_id"], CHANNEL_ID)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ë–î
                db.update_player_subscription(player["id"], is_subscribed)
                
                if not is_subscribed:
                    logger.info(f"–ò–≥—Ä–æ–∫ {player['nickname']} (@{player.get('telegram_username', '–Ω–µ—Ç')}) –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª")
                    unsubscribed_players.append(player)
            else:
                logger.warning(f"–£ –∏–≥—Ä–æ–∫–∞ {player['nickname']} (@{player.get('telegram_username', '–Ω–µ—Ç')}) –Ω–µ —É–∫–∞–∑–∞–Ω telegram_id, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        if unsubscribed_players:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
            players_list = ""
            for idx, player in enumerate(unsubscribed_players, 1):
                players_list += f"{idx}. {player['nickname']} (@{player['telegram_username']})\n"
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
            keyboard = [
                [InlineKeyboardButton("‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data=f"confirm_register_anyway_{team_id}_{tournament_id}")],
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"view_team_{team_id}")]
            ]
            
            await query.edit_message_text(
                f"‚ö†Ô∏è <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ!</b>\n\n"
                f"–°–ª–µ–¥—É—é—â–∏–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}:\n\n"
                f"{players_list}\n"
                f"–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.\n"
                f"–ï—Å–ª–∏ –∏–≥—Ä–æ–∫–∏ –Ω–µ –ø–æ–¥–ø–∏—à—É—Ç—Å—è, –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –ª–∏—à–∏—Ç—å—Å—è –ø—Ä–∏–∑–æ–≤—ã—Ö –¥–µ–Ω–µ–≥.\n\n"
                f"–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?",
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode="HTML"
            )
            
            return PROFILE_MENU
        
        # –ï—Å–ª–∏ –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ç—É—Ä–Ω–∏—Ä
        db.register_team_for_tournament(team_id, tournament_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ —Ç—É—Ä–Ω–∏—Ä–µ
        team = db.get_team_by_id(team_id)
        tournament = db.get_tournament_by_id(tournament_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º
        user_id = query.from_user.id
        is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == user_id for p in team["players"])
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        if is_captain:
            # –ü–æ–∫–∞ –≤ "–æ–∂–∏–¥–∞–Ω–∏–∏", –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            if team["status"] == "pending":
                keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
                keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
            
            # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        await query.edit_message_text(
            f"‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä!</b>\n\n"
            f"–¢—É—Ä–Ω–∏—Ä: <b>{tournament['name']}</b>\n"
            f"–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: {tournament['event_date']}\n\n"
            f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞.\n\n"
            + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")],
            [InlineKeyboardButton("üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data=f"view_team_{team_id}")]
        ]
        
        await query.edit_message_text(
            f"‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä:</b> {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –∫–æ–º–∞–Ω–¥–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
        return PROFILE_MENU
    
async def complete_registration_anyway(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã –∏ —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ callback_data
    data_parts = query.data.split("_")
    team_id = int(data_parts[3])
    tournament_id = int(data_parts[4])
    
    db = context.bot_data["db"]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∫–∞–Ω–∞–ª –µ—â–µ —Ä–∞–∑ (–≤–æ–∑–º–æ–∂–Ω–æ –∫—Ç–æ-—Ç–æ —É—Å–ø–µ–ª –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è)
        userbot = context.bot_data.get("userbot")
        
        for player in team["players"]:
            if player.get("telegram_id"):
                is_subscribed = await check_channel_subscription(userbot, player["telegram_id"], CHANNEL_ID)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ë–î
                db.update_player_subscription(player["id"], is_subscribed)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ç—É—Ä–Ω–∏—Ä
        db.register_team_for_tournament(team_id, tournament_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ —Ç—É—Ä–Ω–∏—Ä–µ
        team = db.get_team_by_id(team_id)
        tournament = db.get_tournament_by_id(tournament_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º
        user_id = query.from_user.id
        is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == user_id for p in team["players"])
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        if is_captain:
            # –ü–æ–∫–∞ –≤ "–æ–∂–∏–¥–∞–Ω–∏–∏", –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            if team["status"] == "pending":
                keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
                keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
            
            # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        await query.edit_message_text(
            f"‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä!</b>\n\n"
            f"–¢—É—Ä–Ω–∏—Ä: <b>{tournament['name']}</b>\n"
            f"–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: {tournament['event_date']}\n\n"
            f"‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. "
            f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –ø—Ä–∏–∑–æ–≤—ã—Ö.\n\n"
            f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞.\n\n"
            + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")],
            [InlineKeyboardButton("üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data=f"view_team_{team_id}")]
        ]
        
        await query.edit_message_text(
            f"‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä:</b> {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –∫–æ–º–∞–Ω–¥–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
        return PROFILE_MENU

async def start_edit_team_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã."""
    query = update.callback_query
    await query.answer()
    
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        await query.edit_message_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    await query.message.reply_text(
        f"üéÆ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: <b>{team['team_name']}</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    
    return TEAM_EDIT_NAME

async def process_edit_team_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã."""
    new_name = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è
    if len(new_name) < 2 or len(new_name) > 30:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_NAME
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    if not re.match(r'^[a-zA-Z–∞-—è–ê-–Ø0-9\s\-_\.]+$', new_name):
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã. "
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —Ç–æ—á–∫–∏.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_NAME
    
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        old_status = team_before["status"]
        was_pending_approved_or_rejected = old_status in ["pending", "approved", "rejected"]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        db.update_team_name(team_id, new_name)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è —Å "approved" –Ω–∞ "draft", —É–¥–∞–ª—è–µ–º —Ä–æ–ª–∏ —É –∏–≥—Ä–æ–∫–æ–≤
        if old_status == "approved" and team["status"] == "draft":
            discord_bot = context.bot_data.get("discord_bot")
            discord_server_id = context.bot_data.get("discord_server_id")
            discord_role_id = context.bot_data.get("discord_role_id")
            discord_captain_role_id = context.bot_data.get("discord_captain_role_id")
            await process_team_roles(db, discord_bot, discord_server_id, discord_role_id, 
                                    discord_captain_role_id, team_id, old_status, team["status"])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º
        user_id = update.message.from_user.id
        is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == user_id for p in team["players"])
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        if is_captain:
            keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
            keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
            
            # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
            if team["status"] == "draft":
                keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
            
            # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await update.message.reply_text(
            f"{status_message}‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {str(e)}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            reply_markup=get_back_to_profile_keyboard()
        )
        
        return TEAM_EDIT_NAME

async def view_player(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–æ–∫–µ –∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞
    player_id = int(query.data.split("_")[1])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_player_id"] = player_id
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        await query.edit_message_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ ID
    player = next((p for p in team["players"] if p["id"] == player_id), None)
    if not player:
        await query.edit_message_text(
            "‚ö†Ô∏è –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º –∫–æ–º–∞–Ω–¥—ã
    user_id = query.from_user.id
    is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == user_id for p in team["players"])
    
    if not is_captain:
        await query.edit_message_text(
            "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤. –¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–µ—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–≥—Ä–æ–∫–µ
    discord_info = f"\nüéÆ <b>Discord:</b> {player['discord_username']}" if player.get('discord_username') else "\nüéÆ <b>Discord:</b> –ù–µ —É–∫–∞–∑–∞–Ω"
    
    message = (
        f"üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ</b>\n\n"
        f"üéÆ <b>–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º:</b> {player['nickname']}\n"
        f"üì± <b>Telegram username:</b> @{player['telegram_username']}"
        f"{discord_info}\n"
        f"üîë <b>–†–æ–ª—å:</b> {'–ö–∞–ø–∏—Ç–∞–Ω' if player.get('is_captain', False) else '–ò–≥—Ä–æ–∫'}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    keyboard = []
    
    # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –∫–∞–ø–∏—Ç–∞–Ω, –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å
    if not player.get("is_captain", False):
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º", callback_data=f"edit_player_nickname_{player_id}")])
        keyboard.append([InlineKeyboardButton("üì± –ò–∑–º–µ–Ω–∏—Ç—å Telegram", callback_data=f"edit_player_username_{player_id}")])
        keyboard.append([InlineKeyboardButton("üéÆ –ò–∑–º–µ–Ω–∏—Ç—å Discord", callback_data=f"edit_player_discord_{player_id}")])
        keyboard.append([InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data=f"delete_player_{player_id}")])
    else:
        # –î–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞ –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏ Discord
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º", callback_data=f"edit_player_nickname_{player_id}")])
        keyboard.append([InlineKeyboardButton("üéÆ –ò–∑–º–µ–Ω–∏—Ç—å Discord", callback_data=f"edit_player_discord_{player_id}")])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")])
    
    await query.edit_message_text(
        message,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    
    return PROFILE_MENU

async def start_edit_player_nickname(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ –∏–∑ callback_data
    player_id = int(query.data.split("_")[3])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_player_id"] = player_id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –∏–≥—Ä–æ–∫–µ
    team_id = context.user_data.get("current_team_id")
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ ID
    player = next((p for p in team["players"] if p["id"] == player_id), None)
    
    if not player:
        await query.edit_message_text(
            "‚ö†Ô∏è –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    await query.message.reply_text(
        f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞</b>\n\n"
        f"–ò–≥—Ä–æ–∫: @{player['telegram_username']}\n"
        f"–¢–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º: <b>{player['nickname']}</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º:",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    
    return TEAM_EDIT_PLAYER_NICKNAME

async def process_edit_player_nickname(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞."""
    new_nickname = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞
    if len(new_nickname) < 2 or len(new_nickname) > 20:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_NICKNAME
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –≤ PUBG
    nickname_exists, correct_nickname = await check_pubg_nickname(new_nickname)
    
    if not nickname_exists:
        await update.message.reply_text(
            f"‚ùå –ò–≥—Ä–æ–∫ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º \"{new_nickname}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PUBG.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_NICKNAME
    
    # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–º, –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if new_nickname != correct_nickname:
        await update.message.reply_text(
            f"‚ÑπÔ∏è –ù–∏–∫–Ω–µ–π–º —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞: \"{correct_nickname}\" (–±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ: \"{new_nickname}\")."
        )
        new_nickname = correct_nickname
    
    player_id = context.user_data.get("current_player_id")
    team_id = context.user_data.get("current_team_id")
    
    if not player_id or not team_id:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        was_pending_approved_or_rejected = team_before["status"] in ["pending", "approved", "rejected"]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞
        db.update_player_nickname(player_id, new_nickname)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
        keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
        if team["status"] == "draft":
            keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await update.message.reply_text(
            f"{status_message}‚úÖ –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞: {e}")
        
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–≥—Ä–æ–∫–∞: {str(e)}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–∏–∫–Ω–µ–π–º.",
            reply_markup=get_back_to_profile_keyboard()
        )
        
        return TEAM_EDIT_PLAYER_NICKNAME

async def start_edit_player_username(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram username –∏–≥—Ä–æ–∫–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ –∏–∑ callback_data
    player_id = int(query.data.split("_")[3])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_player_id"] = player_id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –∏–≥—Ä–æ–∫–µ
    team_id = context.user_data.get("current_team_id")
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ ID
    player = next((p for p in team["players"] if p["id"] == player_id), None)
    
    if not player:
        await query.edit_message_text(
            "‚ö†Ô∏è –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    await query.message.reply_text(
        f"üì± <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram username</b>\n\n"
        f"–ò–≥—Ä–æ–∫: {player['nickname']}\n"
        f"–¢–µ–∫—É—â–∏–π username: <b>@{player['telegram_username']}</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π Telegram username –∏–≥—Ä–æ–∫–∞ (—Ñ–æ—Ä–º–∞—Ç: @username):",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    
    return TEAM_EDIT_PLAYER_USERNAME

async def process_edit_player_username(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ Telegram username –∏–≥—Ä–æ–∫–∞."""
    username_input = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–≤–æ–¥ —Ñ–æ—Ä–º–∞—Ç—É @username
    username_match = re.match(USERNAME_PATTERN, username_input)
    if not username_match:
        await update.message.reply_text(
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ username –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_USERNAME
    
    username = username_match.group(1)
    
    player_id = context.user_data.get("current_player_id")
    team_id = context.user_data.get("current_team_id")
    
    if not player_id or not team_id:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    # –ü–æ–ª—É—á–∏–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userbot = context.bot_data.get("userbot")
    telegram_id = None
    if userbot:
        try:
            telegram_id = await get_tg_id_by_username(username, userbot)
            
            if not telegram_id:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Telegram.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π username:",
                    reply_markup=get_back_to_profile_keyboard()
                )
                return TEAM_EDIT_PLAYER_USERNAME
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID –¥–ª—è @{username}: {e}")
            
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            await update.message.reply_text(
                f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}.\n"
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username.\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–æ —É—á—Ç–∏—Ç–µ, —á—Ç–æ –µ—Å–ª–∏ username –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, "
                "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
            )
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        was_pending_approved_or_rejected = team_before["status"] in ["pending", "approved", "rejected"]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º Telegram username –∏–≥—Ä–æ–∫–∞
        db.update_player_username(player_id, username)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
        keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
        if team["status"] == "draft":
            keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º Telegram username –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await update.message.reply_text(
            f"{status_message}‚úÖ Telegram username –∏–≥—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Telegram username –∏–≥—Ä–æ–∫–∞: {e}")
        
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Telegram username –∏–≥—Ä–æ–∫–∞: {str(e)}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        
        return TEAM_EDIT_PLAYER_USERNAME

async def start_edit_player_discord(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Discord username –∏–≥—Ä–æ–∫–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ –∏–∑ callback_data
    player_id = int(query.data.split("_")[3])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_player_id"] = player_id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –∏–≥—Ä–æ–∫–µ
    team_id = context.user_data.get("current_team_id")
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ ID
    player = next((p for p in team["players"] if p["id"] == player_id), None)
    
    if not player:
        await query.edit_message_text(
            "‚ö†Ô∏è –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    current_discord = player.get('discord_username', '–ù–µ —É–∫–∞–∑–∞–Ω')
    
    await query.message.reply_text(
        f"üéÆ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Discord username</b>\n\n"
        f"–ò–≥—Ä–æ–∫: {player['nickname']} (@{player['telegram_username']})\n"
        f"–¢–µ–∫—É—â–∏–π Discord: <b>{current_discord}</b>\n\n"
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π Discord username (–±–µ–∑ #1234):",
        reply_markup=get_back_to_profile_keyboard(),
        parse_mode="HTML"
    )
    
    return TEAM_EDIT_PLAYER_DISCORD

async def process_edit_player_discord(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ Discord username –∏–≥—Ä–æ–∫–∞."""
    discord_username = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É Discord username
    if len(discord_username) < 2 or len(discord_username) > 32:
        await update.message.reply_text(
            "‚ö†Ô∏è Discord username –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_DISCORD
    
    # –ü–æ–ª—É—á–∞–µ–º Discord ID –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    discord_bot = context.bot_data.get("discord_bot")
    discord_id = await get_discord_id_by_username(discord_username, discord_bot)
    
    if not discord_id:
        await update.message.reply_text(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Discord username \"{discord_username}\" –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω Discord username\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –Ω–∞—à–µ–º—É Discord —Å–µ—Ä–≤–µ—Ä—É\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_DISCORD
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω—É–∂–Ω–æ–º Discord —Å–µ—Ä–≤–µ—Ä–µ
    is_member = await check_discord_membership(discord_id, discord_bot)
    
    if not is_member:
        await update.message.reply_text(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –Ω–∞—à–µ–º Discord —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ —Å—Å—ã–ª–∫–µ: {DISCORD_INVITE_LINK}\n"
            f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ Discord username.",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_DISCORD
    
    player_id = context.user_data.get("current_player_id")
    team_id = context.user_data.get("current_team_id")
    
    if not player_id or not team_id:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    db = context.bot_data["db"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Discord username –≤ –∫–æ–º–∞–Ω–¥–µ (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞)
    if db.check_discord_exists_in_team(team_id, discord_username, exclude_player_id=player_id):
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Discord username —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.\n"
            "–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Discord –∞–∫–∫–∞—É–Ω—Ç.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π Discord username:",
            reply_markup=get_back_to_profile_keyboard()
        )
        return TEAM_EDIT_PLAYER_DISCORD
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        was_pending_approved_or_rejected = team_before["status"] in ["pending", "approved", "rejected"]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º Discord –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
        db.update_player_discord(player_id, discord_username, discord_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
        keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
        if team["status"] == "draft":
            keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º Discord –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await update.message.reply_text(
            f"{status_message}‚úÖ Discord –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Discord –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞: {e}")
        
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Discord –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞: {str(e)}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_back_to_profile_keyboard()
        )
        
        return TEAM_EDIT_PLAYER_DISCORD

async def process_delete_player(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –∏–∑ callback_data
    parts = query.data.split("_")
    decision = parts[3]
    player_id = int(parts[4])
    
    # –ï—Å–ª–∏ –æ—Ç–º–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∏–≥—Ä–æ–∫–∞
    if decision == "no":
        return await view_player(update, context)
    
    # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —É–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
    team_id = context.user_data.get("current_team_id")
    db = context.bot_data["db"]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        team_before = db.get_team_by_id(team_id)
        was_pending_approved_or_rejected = team_before["status"] in ["pending", "approved", "rejected"]
        
        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
        db.delete_player(player_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
        team = db.get_team_by_id(team_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        status_changed = was_pending_approved_or_rejected and team["status"] == "draft"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        context.user_data["team_status_changed"] = status_changed
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
        keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤)
        if team["status"] == "draft":
            keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        status_message = ""
        if status_changed:
            status_message = "‚ö†Ô∏è –í —Å–≤—è–∑–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ß–µ—Ä–Ω–æ–≤–∏–∫'. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.\n\n"
        
        await query.edit_message_text(
            f"{status_message}‚úÖ –ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã!\n\n" + message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: {e}")
        
        await query.edit_message_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞: {str(e)}\n",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        
        return PROFILE_MENU

async def confirm_delete_player(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–≥—Ä–æ–∫–∞ –∏–∑ callback_data
    player_id = int(query.data.split("_")[2])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["current_player_id"] = player_id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –∏–≥—Ä–æ–∫–µ
    team_id = context.user_data.get("current_team_id")
    db = context.bot_data["db"]
    team = db.get_team_by_id(team_id)
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ ID
    player = next((p for p in team["players"] if p["id"] == player_id), None)
    
    if not player:
        await query.edit_message_text(
            "‚ö†Ô∏è –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ", callback_data=f"view_team_{team_id}")
            ]])
        )
        return PROFILE_MENU
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"delete_player_confirm_yes_{player_id}")],
        [InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data=f"delete_player_confirm_no_{player_id}")]
    ]
    
    await query.edit_message_text(
        f"‚ö†Ô∏è <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞?</b>\n\n"
        f"–ò–≥—Ä–æ–∫: {player['nickname']} (@{player['telegram_username']})\n\n"
        f"–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    
    return PROFILE_MENU

async def cancel_team_registration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã."""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã
    team_id = context.user_data.get("current_team_id")
    if not team_id:
        await query.edit_message_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=get_profile_inline_keyboard()
        )
        return PROFILE_MENU
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirm_cancel_yes")],
        [InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å", callback_data="confirm_cancel_no")]
    ]
    
    await query.edit_message_text(
        "‚ö†Ô∏è <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É?</b>\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∞–Ω–¥–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.",
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
    return PROFILE_MENU

async def confirm_cancel_team(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã."""
    query = update.callback_query
    await query.answer()
    
    choice = query.data
    
    if choice == "confirm_cancel_yes":
        team_id = context.user_data.get("current_team_id")
        if not team_id:
            await query.edit_message_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–µ —É–¥–∞–ª–æ—Å—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É.",
                reply_markup=get_profile_inline_keyboard()
            )
            return PROFILE_MENU
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db = context.bot_data["db"]
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        team = db.get_team_by_id(team_id)
        
        if team:
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞, –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å Discord —Ä–æ–ª–∏
            if team['status'] == 'approved':
                discord_bot = context.bot_data.get("discord_bot")
                discord_server_id = context.bot_data.get("discord_server_id")
                discord_role_id = context.bot_data.get("discord_role_id")
                discord_captain_role_id = context.bot_data.get("discord_captain_role_id")
                
                from handlers.utils import process_team_roles
                
                # –ü—ã—Ç–∞–µ–º—Å—è —Å–Ω—è—Ç—å —Ä–æ–ª–∏
                try:
                    roles_removed = await process_team_roles(
                        db, 
                        discord_bot, 
                        discord_server_id, 
                        discord_role_id, 
                        discord_captain_role_id, 
                        team_id, 
                        'approved', 
                        'draft'
                    )
                    
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å —Ä–æ–ª–∏, –ø—Ä–µ—Ä—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
                    if not roles_removed:
                        await query.edit_message_text(
                            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å —Ä–æ–ª–∏ –≤ Discord. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                            reply_markup=get_profile_inline_keyboard()
                        )
                        return PROFILE_MENU
                
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–µ–π Discord: {e}")
                    await query.edit_message_text(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–µ–π –≤ Discord. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                        reply_markup=get_profile_inline_keyboard()
                    )
                    return PROFILE_MENU
            
            # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π
            if db.delete_team(team_id):
                await query.edit_message_text(
                    "‚úÖ –ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.\n\n"
                    "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É, –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç \"–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.",
                    reply_markup=get_profile_inline_keyboard()
                )
                
                # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
                if "current_team_id" in context.user_data:
                    del context.user_data["current_team_id"]
                    
                return PROFILE_MENU
            else:
                await query.edit_message_text(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    reply_markup=get_profile_inline_keyboard()
                )
                return PROFILE_MENU
        else:
            await query.edit_message_text(
                "‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
                reply_markup=get_profile_inline_keyboard()
            )
            return PROFILE_MENU
    else:  # "confirm_cancel_no"
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∞–Ω–¥–µ
        team_id = context.user_data.get("current_team_id")
        db = context.bot_data["db"]
        team = db.get_team_by_id(team_id)
        
        is_captain = any(p.get("is_captain", False) and p.get("telegram_id") == query.from_user.id for p in team["players"])
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
        message = await format_team_info(team, is_captain=is_captain)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
        player_buttons = []
        for player in team["players"]:
            player_buttons.append(
                InlineKeyboardButton(
                    f"{player['nickname']} (@{player['telegram_username']})",
                    callback_data=f"player_{player['id']}"
                )
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        for button in player_buttons:
            keyboard.append([button])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–ø–∏—Ç–∞–Ω–∞
        if is_captain:
            keyboard.append([InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_team_name")])
            keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player")])
            
            if team["status"] == "draft":
                keyboard.append([InlineKeyboardButton("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä", callback_data="register_team")])
            
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="cancel_team")])
        
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="profile_teams")])
        
        await query.edit_message_text(
            message,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode="HTML"
        )
        
        return PROFILE_MENU

async def back_to_profile(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç."""
    # –ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –∫–∞–∫ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–∞–∫ –∏ –∏–∑ callback_query
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        return await profile_menu(update, context)
    else:
        return await profile_menu(update, context)

async def handle_profile_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."""
    query = update.callback_query
    data = query.data
    
    if data == "profile_back":
        return await profile_menu(update, context)
    elif data == "profile_teams":
        return await show_my_teams(update, context)
    elif data == "profile_create_team":
        return await start_create_team(update, context)
    elif data == "profile_check_status":
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        from handlers.status import check_registration_status
        # –í—ã–∑–æ–≤–µ–º –µ—ë —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º callback_query
        return await check_registration_status(update, context)
    elif data == "profile_main_menu":
        return await back_to_main_menu(update, context)
    elif data == "add_player":
        return await add_player_start(update, context)
    elif data == "edit_team_name":
        return await start_edit_team_name(update, context)
    elif data == "register_team":
        return await register_team_for_tournament(update, context)
    elif data.startswith("register_for_tournament_"):
        return await confirm_tournament_registration(update, context)
    elif data.startswith("confirm_register_anyway_"):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é" –¥–ª—è –∫–æ–º–∞–Ω–¥ —Å –Ω–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
        return await complete_registration_anyway(update, context)
    elif data.startswith("confirm_register_"):
        # –û–±—ã—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
        return await complete_tournament_registration(update, context)
    elif data == "cancel_team":
        return await cancel_team_registration(update, context)
    elif data.startswith("player_"):
        return await view_player(update, context)
    elif data.startswith("edit_player_nickname_"):
        return await start_edit_player_nickname(update, context)
    elif data.startswith("edit_player_username_"):
        return await start_edit_player_username(update, context)
    elif data.startswith("edit_player_discord_"):
        return await start_edit_player_discord(update, context)
    elif data.startswith("delete_player_") and not data.startswith("delete_player_confirm_"):
        return await confirm_delete_player(update, context)
    elif data.startswith("delete_player_confirm_"):
        return await process_delete_player(update, context)
    elif data.startswith("confirm_cancel_"):
        return await confirm_cancel_team(update, context)
    elif data.startswith("view_team_"):
        return await view_team(update, context)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö callback_data
    await query.answer(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {data}", show_alert=True)
    logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è callback_data: {data}")
    return PROFILE_MENU

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def get_tg_id_by_username(username: str, userbot):
    """
    –ü–æ–ª—É—á–∞–µ—Ç Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ username —Å –ø–æ–º–æ—â—å—é Pyrogram.
    
    Args:
        username: Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ @)
        userbot: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram
        
    Returns:
        ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    if not userbot:
        logger.warning(f"Pyrogram –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å username @{username}")
        return None
    
    try:
        users = await userbot.get_users(username)
        if users:
            if isinstance(users, list):
                if users:
                    return users[0].id
                else:
                    return None
            else:
                return users.id
        else:
            return None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Telegram ID –¥–ª—è @{username}: {e}")
        return None
    
async def check_pubg_nickname(nickname: str) -> tuple[bool, str]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ PUBG —á–µ—Ä–µ–∑ API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
    
    Args:
        nickname: –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        –ö–æ—Ä—Ç–µ–∂ (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–Ω–∏–∫–Ω–µ–π–º)
    """
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(f"https://api.pubg.report/search/{nickname}") as response:
                if response.status == 200:
                    data = await response.json()
                    
                    # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–≥—Ä–æ–∫
                    if data and len(data) > 0:
                        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
                        correct_nickname = data[0].get("nickname", nickname)
                        return True, correct_nickname
                
                # –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –æ—à–∏–±–∫–∞
                return False, nickname
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞ PUBG: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å—á–∏—Ç–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º
        return True, nickname
    
async def check_channel_subscription(userbot, telegram_id: int, channel_id: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª.
    
    Args:
        userbot: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ Pyrogram
        telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        channel_id: ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª, –∏–Ω–∞—á–µ False
    """
    if not userbot:
        logger.warning("Pyrogram –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª.")
        return True  # –ï—Å–ª–∏ Pyrogram –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
    
    # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª @ –∏–∑ –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    clean_channel_id = channel_id.lstrip('@')
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª
        chat_member = await userbot.get_chat_member(clean_channel_id, telegram_id)
        
        # –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ –¥–æ —ç—Ç–æ–π —Ç–æ—á–∫–∏ –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª {channel_id}")
        return True
        
    except Exception as e:
        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–º–µ–Ω–Ω–æ –æ –Ω–µ—É—á–∞—Å—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "USER_NOT_PARTICIPANT" in str(e):
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª {channel_id}")
            return False
        else:
            # –ü—Ä–∏ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–∫–∞—Ö –ª–æ–≥–∏—Ä—É–µ–º –∏ —Å—á–∏—Ç–∞–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}: {e}")
            return True

async def get_discord_id_by_username(username: str, discord_bot) -> Optional[str]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç Discord ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ username.
    
    Args:
        username: Discord username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        discord_bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Discord
        
    Returns:
        Discord ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    if not discord_bot or not discord_bot.is_ready():
        logger.warning(f"Discord –±–æ—Ç –Ω–µ –≥–æ—Ç–æ–≤. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å username {username}")
        return None
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º server_id –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        from main import DISCORD_SERVER_ID
        
        if not DISCORD_SERVER_ID:
            logger.error("Discord Server ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
            
        server_id = int(DISCORD_SERVER_ID)
        guild = discord_bot.get_guild(server_id)
        
        if not guild:
            logger.error(f"–°–µ—Ä–≤–µ—Ä Discord —Å ID {server_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
        for member in guild.members:
            if member.name.lower() == username.lower():
                return str(member.id)
        
        return None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Discord ID –¥–ª—è {username}: {e}")
        return None

async def check_discord_membership(discord_id: str, discord_bot) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º Discord —Å–µ—Ä–≤–µ—Ä–∞.
    
    Args:
        discord_id: Discord ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        discord_bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Discord
        
    Returns:
        True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Å—Ç–æ–∏—Ç –≤ —Å–µ—Ä–≤–µ—Ä–µ, –∏–Ω–∞—á–µ False
    """
    if not discord_bot or not discord_bot.is_ready():
        logger.warning("Discord –±–æ—Ç –Ω–µ –≥–æ—Ç–æ–≤. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–ª–µ–Ω—Å—Ç–≤–æ")
        return False
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º server_id –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        from main import DISCORD_SERVER_ID
        
        if not DISCORD_SERVER_ID:
            logger.error("Discord Server ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        server_id = int(DISCORD_SERVER_ID)
        guild = discord_bot.get_guild(server_id)
        
        if not guild:
            logger.error(f"–°–µ—Ä–≤–µ—Ä Discord —Å ID {server_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        member = guild.get_member(int(discord_id))
        return member is not None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Discord-—á–ª–µ–Ω—Å—Ç–≤–∞ –¥–ª—è ID {discord_id}: {e}")
        return False

def register_profile_handlers(application: Application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞."""
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –º–æ–¥—É–ª—è status.py
    from handlers.status import check_registration_status, confirm_cancel_registration
    from handlers.status import show_my_team, prompt_team_name, search_team_by_name
    from handlers.status import back_to_status_menu, back_to_main as status_back_to_main
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    profile_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), profile_menu)],
        states={
            PROFILE_MENU: [
                CallbackQueryHandler(handle_profile_action, pattern="^profile_"),
                CallbackQueryHandler(view_team, pattern="^view_team_"),
                CallbackQueryHandler(handle_profile_action, pattern="^(add_player|edit_team_name|register_team|cancel_team)$"),
                CallbackQueryHandler(handle_profile_action, pattern="^player_"),
                CallbackQueryHandler(handle_profile_action, pattern="^edit_player_"),
                CallbackQueryHandler(handle_profile_action, pattern="^delete_player_"),
                CallbackQueryHandler(handle_profile_action, pattern="^confirm_"),
                CallbackQueryHandler(handle_profile_action, pattern="^register_for_tournament_"),
                CallbackQueryHandler(handle_profile_action, pattern="^player_"),
                MessageHandler(filters.Regex("^üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), profile_menu),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), profile_menu),
            ],
            TEAM_CREATE_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_team_name),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_CREATE_CAPTAIN: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_captain_nickname),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_CREATE_CAPTAIN_DISCORD: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_captain_discord),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_ADD_PLAYER_USERNAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_player_username),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_ADD_PLAYER_NICKNAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_player_nickname),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_ADD_PLAYER_DISCORD: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_player_discord),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_EDIT_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_edit_team_name),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_EDIT_PLAYER_NICKNAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_edit_player_nickname),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_EDIT_PLAYER_USERNAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_edit_player_username),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            TEAM_EDIT_PLAYER_DISCORD: [
                MessageHandler(filters.TEXT & ~filters.COMMAND & ~filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), process_edit_player_discord),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç$"), back_to_profile),
            ],
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ –º–æ–¥—É–ª—è status.py
            STATUS_INPUT: [
                MessageHandler(filters.Regex("^üë§ –ú–æ—è –∫–æ–º–∞–Ω–¥–∞$"), show_my_team),
                MessageHandler(filters.Regex("^üéÆ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é$"), prompt_team_name),
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥$"), back_to_profile),
            ],
            STATUS_TEAM_ACTION: [
                MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é$|^‚óÄÔ∏è –ù–∞–∑–∞–¥$"), status_back_to_main),
            ],
            STATUS_CONFIRM_CANCEL: [
                MessageHandler(filters.Regex("^‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å$|^‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å$"), confirm_cancel_registration),
            ],
            STATUS_SEARCH_TEAM: [
                MessageHandler(filters.Regex("^‚óÄÔ∏è –ù–∞–∑–∞–¥$"), back_to_status_menu),
                MessageHandler(filters.TEXT & ~filters.COMMAND, search_team_by_name),
            ],
        },
        fallbacks=[CommandHandler("start", back_to_main_menu)],
    )
    
    application.add_handler(profile_handler)